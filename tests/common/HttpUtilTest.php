<?php

/*
 * This file is a part of PHPAX-RS framework, released under terms of GPL-3.0
 * licence. Copyright (c) 2014, UnArt, o.s. All rights reserved.
 */

namespace phpaxrs\common;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-08-05 at 16:04:08.
 */
class HttpUtilTest extends \PHPUnit_Framework_TestCase {

    public function headers() {
        return array(
            array(
                '*/*;q=0.5, text/javascript, application/javascript',
                array(
                    'text/javascript', 'application/javascript', '*/*'
                )
            ),
            array(
                'text/html, */*; q=0.01',
                array(
                    'text/html', '*/*'
                )
            )
        );
    }

    /**
     * @covers phpaxrs\common\HttpUtil::parse_accept_header
     * @dataProvider headers
     */
    public function testParse_accept_header($header, $expected) {
        $this->assertEquals($expected, HttpUtil::parse_accept_header($header));
    }
    
    public function matchMimes() {
        return array(
            array(NULL, NULL, FALSE),
            array('*/', NULL, FALSE),
            array('*/**', NULL, FALSE),
            array('aaaa*', NULL, FALSE),
            array('*/*', 'aa', FALSE),
            array('*/*', 'aa/', FALSE),
            array('*/*', '*/*', FALSE),
            array('*/*', 'aaaa/*', FALSE),
            array('text/html', NULL, FALSE),
            array('text/html', 'text/htm', FALSE),
            array('text/html', 'text/html', TRUE),
            array('text/*', 'text/html', TRUE),
            array('text/*', 'text/plain', TRUE),
            array('text/*', 'tex/plain', FALSE),
            array('text/*', 'text/', FALSE),
            array('*/*', 'text/plain', TRUE),
            array('*/*', 'application/xhtml+xml', TRUE),
            array('application/xhtml+xml', 'application/xhtml+xml', TRUE)
        );
    }

    /**
     * @covers phpaxrs\common\HttpUtil::accept_match
     * @dataProvider matchMimes
     */
    public function testAccept_match($accept_mime, $mime, $expected) {
        $this->assertEquals($expected, HttpUtil::accept_match($accept_mime, $mime));
    }

}
